

: NOP
    ( source: DS0
    ( stack: inhibit
    ( direction: up/down

: DUP
    ( source: DS0
    ( stack: normal
    ( direction: down

: SWAP
    ( source: DS1
    ( stack: inhibit
    ( direction: down

: OVER
    ( source: DS1
    ( stack: normal
    ( direction: down

: POP
    ( source: DS1
    ( stack: inhibit
    ( direction: up

: DROP
    ( source: DS1
    ( stack: inhibit
    ( direction: up

: ROT
    ( source: DS2
    ( stack: inhibit
    ( direction: down

: 2SWAP
    ( source: DS3
    ( stack: inhibit
    ( direction: down
    ( NOTE: execute twice

: 2OVER
    ( source: DS3
    ( stack: normal
    ( direction: down
    ( NOTE: execute twice

: ROLL_RIGHT
    ( source: LEFTBIT_LSB
    ( stack: inhibit
    ( direction: up/down

: ADD
    ( source: ADDER
    ( stack: normal
    ( direction: up

: NAND
    ( source: NAND gate
    ( stack: normal
    ( direction: up

: PUSH
    ( source: DATABUS
    ( stack: normal
    ( direction: down

: NOT ( A -- ~A )
    DUP NAND ;

: AND ( A B -- A AND B )
    NAND NOT ;

: OR ( A B -- A OR B )
    NOT SWAP NOT NAND ;

: NOR ( A B -- A NOR B )
    OR NOT ;

: XOR ( A B -- A OR B )
    OVER NOT
    OVER NAND
    ROT ROT NOT
    NAND NAND ;

: XNOR ( A B -- A XNOR B )
    XOR NOT ;






A B XOR
--------------
                  A B  OVER NOT
               A B ~A  OVER
             A B ~A B  NAND
       A B NAND(~A,B)  ROT ROT
       NAND(~A,B) A B  NOT
      NAND(~A,B) A ~B  NAND
NAND(~A,B) NAND(A,~B)  NAND
             XOR(A,B)

